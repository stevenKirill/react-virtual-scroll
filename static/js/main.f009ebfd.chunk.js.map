{"version":3,"sources":["virtualTable.module.css","VirtualTableScroll.jsx","App.js","data.js","index.js"],"names":["module","exports","VirtualTableScroll","headers","rows","visibleRows","rowHeight","useState","range","setRange","root","useRef","useEffect","current","addEventListener","handleScroll","removeEventListener","e","Math","floor","target","scrollTop","className","classes","wrapper","map","header","id","style","height","overflow","ref","table","slice","row","idx","Object","entries","cell","key","value","length","App","data","Array","from","_","name","number","job","hobby","random","toString","substr","keys","filter","field","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,4BAA4B,QAAU,8BAA8B,OAAS,6BAA6B,KAAO,6B,gKCoFpKC,EAlFY,SAAC,GAKrB,IAJHC,EAIE,EAJFA,QACAC,EAGE,EAHFA,KACAC,EAEE,EAFFA,YACAC,EACE,EADFA,UAEA,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAOC,iBAAO,MAEpBC,qBAAU,WACN,IAAQC,EAAYH,EAAZG,QAER,OADAA,EAAQC,iBAAiB,SAASC,GAC3B,WACHF,EAAQG,oBAAoB,SAASD,MAE3C,IAEF,IAQMA,EAAe,SAACE,GAClBR,EAASS,KAAKC,MAAMF,EAAEG,OAAOC,UAAYf,KAoC7C,OACI,sBAAKgB,UAAWC,IAAQC,QAAxB,UACI,qBAAKF,UAAWC,IAAQpB,QAAxB,SAlCGA,EAAQsB,KAAI,SAACC,EAAOC,GACvB,OAAO,qBAAuBL,UAAWC,IAAQG,OAA1C,SAAmDA,GAAzCA,EAASC,QAkC1B,sBACIC,MAAO,CACHC,OAAQvB,EAAYD,EAAc,EAClCyB,SAAU,QAEdC,IAAKrB,EALT,UAOI,qBAAKkB,MAAO,CAAEC,OAtDfrB,EAAQF,KAuDP,uBAAOgB,UAAWC,IAAQS,MAA1B,SACI,uBAAOV,UAAWC,IAAQnB,KAA1B,SAtCLA,EAAK6B,MAAMzB,EAAOA,EAAQH,GAAaoB,KAAI,SAACS,EAAIC,GACnD,OACI,oBACIb,UAAWC,IAAQW,IAEnBN,MAAO,CAAEC,OAAQvB,GAHrB,SAKK8B,OAAOC,QAAQH,GAAKT,KAAI,SAACa,GACtB,kBAAqBA,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KACA,MAAY,OAARD,EACO,KAGH,oBACIjB,UAAWC,IAAQe,KADvB,SAGU,SAARC,EAAA,UAAoBC,EAApB,YAA6BL,EAAM,GAAMK,GADlCN,EAAIP,GAAKa,OAXzBN,EAAIP,WAoCb,qBAAKC,MAAO,CAAEC,OAtDfvB,GAAaF,EAAKqC,QAAUjC,EAAQH,cCNpCqC,MAff,WACE,IAAMC,ECFGC,MAAMC,KAAK,CAAEJ,OAAQ,MAAQ,SAACK,EAAEX,GACnC,MAAO,CACHY,KAAM,SACNC,OAAQb,EAAM,EACdc,IAAK,sBACLC,MAAO,MACPvB,GATa,IAAMT,KAAKiC,SAASC,SAAS,IAAIC,OAAO,EAAG,ODM5DlD,EAAUiC,OAAOkB,KAAKX,EAAK,IAAIY,QAAO,SAAAC,GAAK,MAAc,OAAVA,KACrD,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,CACElB,KAAMuC,EACNxC,QAASA,EACTE,YAAa,GACbC,UAAW,QERnBmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f009ebfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"virtualTable_wrapper__2Op_5\",\"table\":\"virtualTable_table__3xhWE\",\"headers\":\"virtualTable_headers__3aLJs\",\"header\":\"virtualTable_header__t-y8Q\",\"cell\":\"virtualTable_cell__3yeKX\"};","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './virtualTable.module.css';\r\n\r\nconst VirtualTableScroll = ({\r\n    headers,\r\n    rows,\r\n    visibleRows,\r\n    rowHeight\r\n}) => {\r\n    const [range, setRange] = useState(0);\r\n    const root = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const { current } = root;\r\n        current.addEventListener('scroll',handleScroll);\r\n        return () => {\r\n            current.removeEventListener('scroll',handleScroll);\r\n        }\r\n    },[]);\r\n\r\n    const getTopBlockHight = () => {\r\n        return range * rowHeight;\r\n    };\r\n\r\n    const getBottomBlockHeight = () => {\r\n        return rowHeight * (rows.length - (range + visibleRows));\r\n    };\r\n\r\n    const handleScroll = (e) => {\r\n        setRange(Math.floor(e.target.scrollTop / rowHeight))\r\n    };\r\n\r\n    const renderHeaders = () => {\r\n        return headers.map((header,id) => {\r\n            return <div key={header + id} className={classes.header}>{header}</div>\r\n        });\r\n    };\r\n\r\n    const renderRows = () => {\r\n        return rows.slice(range, range + visibleRows).map((row,idx) => {\r\n            return (\r\n                <tr\r\n                    className={classes.row}\r\n                    key={row.id}\r\n                    style={{ height: rowHeight }}\r\n                >\r\n                    {Object.entries(row).map((cell) => {\r\n                        const [key, value] = cell;\r\n                        if (key === 'id') {\r\n                            return null\r\n                        } else {\r\n                            return (\r\n                                <td\r\n                                    className={classes.cell}\r\n                                    key={row.id + value}\r\n                                >{key === 'name' ? `${value}-${idx + 1}` : value}\r\n                                </td>\r\n                            )\r\n                        }\r\n                    })}\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.headers}>{renderHeaders()}</div>\r\n            <div \r\n                style={{\r\n                    height: rowHeight * visibleRows + 1,\r\n                    overflow: 'auto' \r\n                }}\r\n                ref={root}\r\n            >\r\n                <div style={{ height: getTopBlockHight() }}></div>\r\n                <table className={classes.table}>\r\n                    <tbody className={classes.rows}>{renderRows()}</tbody>\r\n                </table>\r\n                <div style={{ height: getBottomBlockHeight() }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VirtualTableScroll\r\n","import './App.css';\nimport { generateData } from './data';\nimport VirtualTableScroll from './VirtualTableScroll';\n\nfunction App() {\n  const data = generateData();\n  const headers = Object.keys(data[0]).filter(field => field !== 'id');\n  return (\n    <div className=\"App\">\n      <VirtualTableScroll\n        rows={data}\n        headers={headers}\n        visibleRows={10}\n        rowHeight={50}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const generateId = () => '_' + Math.random().toString(36).substr(2, 9);\r\n\r\nexport const generateData = () => {\r\n    return Array.from({ length: 10000 },(_,idx) => {\r\n        return {\r\n            name: 'kirill',\r\n            number: idx + 1,\r\n            job: 'front end developer',\r\n            hobby: 'gym',\r\n            id: generateId(),\r\n        };\r\n    });\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}